pipeline {
    agent { label 'webs' }

    environment {
        PROJECT_ZONE = "${env.JENK_INT_IT_ZONE}"
        PROJECT_ID = "${env.JENK_INT_IT_PROJECT_ID}"
        STAGING_CLUSTER = "${env.JENK_INT_IT_STAGING}"
        PROD_CLUSTER = "${env.JENK_INT_IT_PROD}"
        BUILD_CONTEXT_BUCKET = "${env.JENK_INT_IT_BUCKET}"
        BUILD_CONTEXT = "build-context-${env.BUILD_ID}.tar.gz"
        APP_NAME = "jenkins-integration-samples-gke"
        GCR_IMAGE = "gcr.io/${env.PROJECT_ID}/${env.APP_NAME}:${env.BUILD_ID}"
        APP_JAR = "${env.APP_NAME}.jar"
    }

    tools {
        dockerTool 'docker1'
    }

    stages {
        stage("Build and test") {
            agent {
                kubernetes {
                    cloud 'kubernetes'
                    inheritFrom 'maven-pod'
                    yamlFile 'gke/jenkins/maven-pod.yaml'
                }
            }
            steps {
                container('maven') {
                    dir("gke") {
                        // Build
                        sh "mvn clean package"

                        // Run tests
                        sh "mvn verify"

                        // Bundle the generated artifact
                        sh "cp target/${env.APP_NAME}-*.jar ${env.APP_JAR}"

                        // Archive the build context for Kaniko
                        sh "tar --exclude='./.git' -zcvf /tmp/${env.BUILD_CONTEXT} ."
                        sh "mv /tmp/${env.BUILD_CONTEXT} ."
                        step([
                            $class: 'ClassicUploadStep',
                            credentialsId: env.JENK_INT_IT_CRED_ID,
                            bucket: "gs://${env.BUILD_CONTEXT_BUCKET}",
                            pattern: env.BUILD_CONTEXT
                        ])
                    }
                }
            }
        }

        stage("Publish Image") {
            agent {
                kubernetes {
                    cloud 'kubernetes'
                    label 'kaniko-pod'
                    yamlFile 'gke/jenkins/kaniko-pod.yaml'
                }
            }
            environment {
                PATH = "/busybox:/kaniko:$PATH"
            }
            steps {
                container(name: 'kaniko', shell: '/busybox/sh') {
                    sh '''
                    #!/busybox/sh
                    /kaniko/executor -f `pwd`/gke/Dockerfile -c `pwd` \
                    --context="gs://${BUILD_CONTEXT_BUCKET}/${BUILD_CONTEXT}" \
                    --destination="${GCR_IMAGE}" --build-arg JAR_FILE="${APP_JAR}"
                    '''
                }
       
